<% if user_signed_in? %>
  <% current_user.email %> / <%= link_to 'log out', destroy_user_session_path, method: 'delete' %>
<% else %>
<%= link_to 'log in', new_user_session_path %>
<% end %>

<h1>Chat Rooms</h1>

<table>
  <thead>
    <tr>
      <th>방제</th>
      <th>인원</th>
      <th>방장</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody class="chat_room_list">
    <% @chat_rooms.reverse.each do |chat_room| %>
      <tr class="row_<%= chat_room.id %>">
        <td class="<%= chat_room.id %>_room_title"><%= chat_room.title %></td>
        <td><span class="current<%= chat_room.id %>"><%= chat_room.admissions.size %></span> / <span class="current<%= chat_room.id %>_max"><%= chat_room.max_count %></span></td>
        <td><%= chat_room.master_id %></td>
        <td><%= link_to 'Show', chat_room %></td>
        <% if user_signed_in? and chat_room.master_id.eql?(current_user.email) %>
          <td><%= link_to 'Edit', edit_chat_room_path(chat_room) %></td>  
          <td><%= link_to 'Destroy', "/chat_rooms/#{chat_room.id}", method: 'delete', remote: true %></td>
        <% end %>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<%= link_to 'New Chat Room', new_chat_room_path %>

<script>
  $(document).on('ready', function(){
    // 방이 만들어졌을 때, 방에 대한 데이터를 받아서
    // 방 목록에 추가해주는 function
    function room_created(data){
      $('.chat_room_list').prepend(`
        <tr>
          <td>${data.title}</td>
          <td><span class="current${data.id}">0</span> / ${data.max_count}</td>
          <td>${data.master_id}</td>
          <td><a href="/chat_rooms/${data.id}">Show</a></td>
        </tr>
        
      `)
    }
    
    function user_joined(data){
      var current = $(`.current${data.chat_room_id}`);
      current.text(parseInt(current.text()) + 1);
    }
    
    function room_updated(data){
      $(`.${data.id}_room_title`).text(data.title);
      $(`.current${data.id}_max`).text(data.max_count);
    }
    
    function user_exited(data){
      var current = $(`.current${data.chat_room_id}`);
      current.text(parseInt(current.text()) - 1);
    }
    function room_destroyed(data){
      $(`.row_${data.id}`)[0].remove();
      //location.reload();
    }
    
    var pusher = new Pusher("<%= ENV["pusher_key"] %>", {
      cluster: "<%= ENV["pusher_cluster"] %>",
      encrypted: true
    });

    var channel = pusher.subscribe('chat_room');
    channel.bind('create', function(data) {
      //console.log(data);
      room_created(data);
      
    });
    
    channel.bind('join', function(data) {
      //console.log(data);
      user_joined(data);
    });
    
    channel.bind('update', function(data){
      room_updated(data);
    });
    
    channel.bind('exit', function(data){
      user_exited(data);
    });
    
    channel.bind('destroy', function(data) {
      room_destroyed(data);
    });
  });
  
</script>